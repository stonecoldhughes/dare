Integrate into dare:
    
    is there a way to round robin it like in main.cpp?

    you don't even need the invocation id in profile class...
    take it out. Repurpose that into an "iterations" counter
    and replicate main.cpp's usage. Build that into the fake_data
    class.

    iterations[thread_num][kernel_type]

    is there a faster way to make a fake_data container? 

    do we know up front which kernels will be called? Probably not.

Implement:
    
    1. Busy-waiting for clip times
    2. Class factory generator

    you'll want a map of fake data objects.

    fake_data_bank[CORE_WHATEVER][thread_num]

    You need to be able to ignore certain core_blas types.
    For example, all the little ones called inside of an SVD
    or QR.

    Create a base class that returns proper objects
    Maybe template it?
